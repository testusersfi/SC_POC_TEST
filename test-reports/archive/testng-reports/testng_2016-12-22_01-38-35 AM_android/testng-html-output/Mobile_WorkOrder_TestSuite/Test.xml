<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="BDC7-L-1Z7XLV1" name="Test" tests="2" failures="0" timestamp="21 Dec 2016 20:08:40 GMT" time="0.029" errors="0">
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="mwo.tests.LoginTests">
    <failure type="java.lang.UnsupportedClassVersionError" message="com/report/factory/ExtentManager : Unsupported major.minor version 52.0">
      <![CDATA[java.lang.UnsupportedClassVersionError: com/report/factory/ExtentManager : Unsupported major.minor version 52.0
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at com.appium.testng.TestBaseStandalone.beforeSuite(Unknown Source)
... Removed 17 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="mwo.tests.LoginTests">
    <failure type="java.lang.UnsupportedClassVersionError" message="com/report/factory/ExtentTestManager : Unsupported major.minor version 52.0">
      <![CDATA[java.lang.UnsupportedClassVersionError: com/report/factory/ExtentTestManager : Unsupported major.minor version 52.0
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at com.appium.testng.TestBaseStandalone.beforeMethod(Unknown Source)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="mwo.tests.LoginTests">
    <failure type="java.lang.UnsupportedClassVersionError" message="com/report/factory/ExtentTestManager">
      <![CDATA[java.lang.UnsupportedClassVersionError: com/report/factory/ExtentTestManager
	at com.appium.testng.TestBaseStandalone.afterMethod(Unknown Source)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="mwo.tests.LoginTests">
    <failure type="java.lang.UnsupportedClassVersionError" message="com/report/factory/ExtentTestManager">
      <![CDATA[java.lang.UnsupportedClassVersionError: com/report/factory/ExtentTestManager
	at com.appium.testng.TestBaseStandalone.beforeMethod(Unknown Source)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="mwo.tests.LoginTests">
    <failure type="java.lang.UnsupportedClassVersionError" message="com/report/factory/ExtentTestManager">
      <![CDATA[java.lang.UnsupportedClassVersionError: com/report/factory/ExtentTestManager
	at com.appium.testng.TestBaseStandalone.afterMethod(Unknown Source)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="testInValidLogin" time="0.0" classname="mwo.tests.LoginTests">
    <skipped/>
  </testcase> <!-- testInValidLogin -->
  <testcase name="testValidLogin" time="0.0" classname="mwo.tests.LoginTests">
    <skipped/>
  </testcase> <!-- testValidLogin -->
</testsuite> <!-- Test -->
